{"ast":null,"code":"var _jsxFileName = \"/Users/nyzrus/Documents/javascript/twitter/client/src/Views/Landing/Landing.js\";\nimport React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport Login from './Login';\nimport Register from './Register';\nimport { registerUser } from '../../Utils/api';\n\nconst Landing = props => {\n  const [registerModalOpen, setRegisterModalOpen] = useState(true);\n  const [registerFirstName, setRegisterFirstName] = useState('');\n  const [registerLastName, setRegisterLastName] = useState('');\n  const [registerEmail, setRegisterEmail] = useState('');\n  const [registerPassword, setRegisterPassword] = useState('');\n  const [registerConfirmPassword, setRegisterConfirmPassword] = useState('');\n  const [loginUsername, setLoginUsername] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n\n  const toggleRegisterModal = () => {\n    console.log(registerModalOpen);\n    setRegisterModalOpen(!registerModalOpen);\n  };\n\n  const registerNewUser = async () => {\n    const userData = {\n      firstName: registerFirstName,\n      lastName: registerLastName,\n      email: registerEmail,\n      password: registerPassword,\n      confirmPassword: registerConfirmPassword\n    };\n\n    try {\n      //console.log('sending...');\n      let user = await registerUser(userData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleLogIn = async () => {\n    const loginData = {};\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: ['/register'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    registerUser: registerNewUser,\n    registerModalOpen: registerModalOpen,\n    firstName: registerFirstName,\n    setRegisterFirstName: setRegisterFirstName,\n    lastName: registerLastName,\n    setRegisterLastName: setRegisterLastName,\n    setRegisterEmail: setRegisterEmail,\n    email: registerEmail,\n    password: registerPassword,\n    setRegisterPassword: setRegisterPassword,\n    confirmPassword: registerConfirmPassword,\n    setRegisterConfirmPassword: setRegisterConfirmPassword,\n    handleRegisterModalClose: toggleRegisterModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: ['/', '/login'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    registerModalOpen: registerModalOpen,\n    handleRegisterModalOpen: toggleRegisterModal,\n    handleLogIn: handleLogIn,\n    loginUsername: loginUsername,\n    setLoginPassword: setLoginPassword,\n    loginPassword: loginPassword,\n    setLoginUsername: setLoginUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/nyzrus/Documents/javascript/twitter/client/src/Views/Landing/Landing.js"],"names":["React","useState","Route","Switch","Grid","Login","Register","registerUser","Landing","props","registerModalOpen","setRegisterModalOpen","registerFirstName","setRegisterFirstName","registerLastName","setRegisterLastName","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","registerConfirmPassword","setRegisterConfirmPassword","loginUsername","setLoginUsername","loginPassword","setLoginPassword","toggleRegisterModal","console","log","registerNewUser","userData","firstName","lastName","email","password","confirmPassword","user","error","handleLogIn","loginData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport Login from './Login';\nimport Register from './Register';\nimport { registerUser } from '../../Utils/api';\n\nconst Landing = (props) => {\n\tconst [registerModalOpen, setRegisterModalOpen] = useState(true);\n\tconst [registerFirstName, setRegisterFirstName] = useState('');\n\tconst [registerLastName, setRegisterLastName] = useState('');\n\tconst [registerEmail, setRegisterEmail] = useState('');\n\tconst [registerPassword, setRegisterPassword] = useState('');\n\tconst [registerConfirmPassword, setRegisterConfirmPassword] = useState('');\n\tconst [loginUsername, setLoginUsername] = useState('');\n\tconst [loginPassword, setLoginPassword] = useState('');\n\n\tconst toggleRegisterModal = () => {\n\t\tconsole.log(registerModalOpen);\n\t\tsetRegisterModalOpen(!registerModalOpen);\n\t};\n\n\tconst registerNewUser = async () => {\n\t\tconst userData = {\n\t\t\tfirstName: registerFirstName,\n\t\t\tlastName: registerLastName,\n\t\t\temail: registerEmail,\n\t\t\tpassword: registerPassword,\n\t\t\tconfirmPassword: registerConfirmPassword,\n\t\t};\n\t\ttry {\n\t\t\t//console.log('sending...');\n\t\t\tlet user = await registerUser(userData);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst handleLogIn = async () => {\n\t\tconst loginData = {};\n\t};\n\n\treturn (\n\t\t<Grid container direction=\"column\" alignItems=\"center\">\n\t\t\t<Switch>\n\t\t\t\t<Route path={['/register']}>\n\t\t\t\t\t<Register\n\t\t\t\t\t\tregisterUser={registerNewUser}\n\t\t\t\t\t\tregisterModalOpen={registerModalOpen}\n\t\t\t\t\t\tfirstName={registerFirstName}\n\t\t\t\t\t\tsetRegisterFirstName={setRegisterFirstName}\n\t\t\t\t\t\tlastName={registerLastName}\n\t\t\t\t\t\tsetRegisterLastName={setRegisterLastName}\n\t\t\t\t\t\tsetRegisterEmail={setRegisterEmail}\n\t\t\t\t\t\temail={registerEmail}\n\t\t\t\t\t\tpassword={registerPassword}\n\t\t\t\t\t\tsetRegisterPassword={setRegisterPassword}\n\t\t\t\t\t\tconfirmPassword={registerConfirmPassword}\n\t\t\t\t\t\tsetRegisterConfirmPassword={setRegisterConfirmPassword}\n\t\t\t\t\t\thandleRegisterModalClose={toggleRegisterModal}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\t\t\t\t<Route path={['/', '/login']}>\n\t\t\t\t\t<Login\n\t\t\t\t\t\tregisterModalOpen={registerModalOpen}\n\t\t\t\t\t\thandleRegisterModalOpen={toggleRegisterModal}\n\t\t\t\t\t\thandleLogIn={handleLogIn}\n\t\t\t\t\t\tloginUsername={loginUsername}\n\t\t\t\t\t\tsetLoginPassword={setLoginPassword}\n\t\t\t\t\t\tloginPassword={loginPassword}\n\t\t\t\t\t\tsetLoginUsername={setLoginUsername}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Grid>\n\t);\n};\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}